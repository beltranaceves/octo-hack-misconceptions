{"version":3,"sources":["components/navigation.jsx","components/header.jsx","components/about.jsx","components/services.jsx","components/Team.jsx","utils.js","App.jsx","serviceWorker.js","index.js"],"names":["Navigation","props","id","className","type","data-toggle","data-target","href","src","Header","useState","year","setYear","years","i","push","value","label","data","title","paragraph","style","display","alignItems","onChange","isSearchable","name","options","classNamePrefix","placeholder","padding","onClick","parentCallback","About","alt","Why","map","d","link","text","Why2","Services","console","log","themeName","categories","c","categoryName","subcategories","sc","subcategoryName","misconceptions","m","dangerouslySetInnerHTML","__html","html","Team","img","job","icon","getMisconceptionsByYear","entry","dbJSON","references","reference","newMisconceptions","length","theme","j","category","k","subcategory","misconceptionArrayToJSON","groupBy","array","f","groups","forEach","o","group","JSON","stringify","Object","keys","results","item","groupMisconceptions","transformMisconceptions","App","SmoothScroll","speed","speedAsDuration","landingPageData","setLandingPageData","useEffect","JsonData","info","setInfo","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ef31332a.chunk.js","sourcesContent":["export const Navigation = (props) => {\n  return (\n    <nav id='menu' className='navbar navbar-default navbar-fixed-top'>\n      <div className='container'>\n        <div className='navbar-header'>\n          <button\n            type='button'\n            className='navbar-toggle collapsed'\n            data-toggle='collapse'\n            data-target='#bs-example-navbar-collapse-1'\n          >\n            {' '}\n            <span className='sr-only'>Toggle navigation</span>{' '}\n            <span className='icon-bar'></span>{' '}\n            <span className='icon-bar'></span>{' '}\n            <span className='icon-bar'></span>{' '}\n          </button>\n          <a className='navbar-brand page-scroll' href='#page-top'>\n            Misconceptions\n          </a>{' '}\n          <img src={\"https://cdn-icons-png.flaticon.com/512/3798/3798376.png\"} className=\"logo\"></img>\n        </div>\n\n        <div\n          className='collapse navbar-collapse'\n          id='bs-example-navbar-collapse-1'\n        >\n          <ul className='nav navbar-nav navbar-right'>\n            <li>\n              <a href='#about' className='page-scroll'>\n                Why\n              </a>\n            </li>\n            <li>\n              <a href='#team' className='page-scroll'>\n                Team\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  )\n}\n","import { useState} from \"react\";\nimport Select from \"react-select\";\nexport const Header = (props) => {\n  const [year, setYear] = useState(null);\n\n  var years = (() => {\n    var min = 1985;\n    var max = 2021;\n    var years = [];\n    for (var i = min; i < max; i++) {\n      years.push({\n        value: i,\n        label: i\n      });\n    }\n    return years;\n  })();\n\n  function handleSetYear(year) {\n    // const year = yearSelectRef.current.value;\n    setYear(year);\n  }\n\n  function handleSubmitYear() {\n    if (year != null) {\n      props.parentCallback(year);\n    } \n  }\n  const mystyle = {\n    display: \"inline-flex\",\n    alignItems: \"baseline\"\n  };\n\n  return (\n    <header id=\"header\">\n      <div className=\"intro\">\n        <div className=\"overlay\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 col-md-offset-2 intro-text\">\n                <h1>\n                  {props.data ? props.data.title : \"Loading\"}\n                  <span></span>\n                </h1>\n                <p>{props.data ? props.data.paragraph : \"Loading\"}</p>\n                <div \n                  className=\"yearSelect\" \n                  style={mystyle}>\n                  <Select onChange={handleSetYear}\n                    isSearchable={true}\n                    name=\"years\"\n                    options={years}\n                    className=\"basic-multi-select\"\n                    classNamePrefix=\"select\"\n                    placeholder=\"Graduation Year\"\n                  />\n                  <a\n                    // href='#features'\n                    className=\"btn btn-custom btn-lg page-scroll\"\n                    style={{padding: \"10 20\"}}\n                    onClick={handleSubmitYear}\n                    href='#services'\n                  >\n                    Get truth\n                  </a>{\" \"}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n","export const About = (props) => {\n  return (\n    <div id=\"about\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-xs-12 col-md-6\">\n            {\" \"}\n            <img src=\"https://i.redd.it/b40ya5bkejq71.jpg\" className=\"img-responsive\" alt=\"\" />{\" \"}\n          </div>\n          <div className=\"col-xs-12 col-md-6\">\n            <div className=\"about-text\">\n              <h2>Why?</h2>\n              <p>{props.data ? props.data.paragraph : \"loading...\"}</p>\n              <h3>For example:</h3>\n              <div className=\"list-style\">\n                <div className=\"col-lg-6 col-sm-6 col-xs-12\">\n                  <ul>\n                    {props.data\n                      ? props.data.Why.map((d, i) => (\n                        <a href={d.link} key={i}>\n                          <li key={`${d.text}-${i}`}>{d.text}</li>\n                        </a>\n                        ))\n                      : \"loading\"}\n                  </ul>\n                </div>\n                <div className=\"col-lg-6 col-sm-6 col-xs-12\">\n                  <ul>\n                    {props.data\n                      ? props.data.Why2.map((d, i) => (\n                        <a href={d.link}>\n                          <li key={`${d.text}-${i}`}>{d.text}</li>\n                        </a>\n                        ))\n                      : \"loading\"}\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const Services = (props) => {\n  console.log(props);\n  return (\n    <div id='services' className='text-center'>\n      <div className='container'>\n        <div className='section-title'>\n          <h1>{props.data.themeName}</h1>\n        </div>\n        <div className='row'>\n          {props.data.categories\n            ? props.data.categories.map((c, i) => (\n                <div key={`${c.categoryName}-${i}`} className='col-md-6'>\n                  {' '}\n                  <div className='service-desc'>\n                    <h3>{c.categoryName}</h3>\n\n\n                    <div className='row'>\n                      {c.subcategories\n                        ? c.subcategories.map((sc, i) => (\n                            <div key={`${sc.subcategoryName}-${i}`} className='col-md'>\n                              {' '}\n                              <div className='service-desc'>\n                                <h4>{sc.subcategoryName}</h4>\n                                \n\n                                <div className='row'>\n                                  {sc.misconceptions\n                                    ? sc.misconceptions.map((m, i) => (\n                                        <div key={`1000-${i}`} className='col-md'>\n                                          {' '}\n                                          <div className='service-desc'>\n                                            {/* <h3>{m.text}</h3> */}\n                                            <div dangerouslySetInnerHTML={{ __html: m.html }} />\n                                          </div>\n                                        </div>\n                                      ))\n                                    : 'loading'}\n                                </div>\n\n\n                              </div>\n                            </div>\n                          ))\n                        : 'loading'}\n                    </div>\n\n\n                  </div>\n                </div>\n              ))\n            : 'loading'}\n        </div>\n      </div>\n    </div>\n  )\n}\n","export const Team = (props) => {\n  return (\n    <div id='team' className='text-center'>\n      <div className='container'>\n        <div className='col-md-8 col-md-offset-2 section-title'>\n          <h2>Meet the Team</h2>\n          <p>\n            \n\n\n          </p>\n        </div>\n        <div id='row'>\n          {props.data\n            ? props.data.map((d, i) => (\n              <a href={d.link}>\n                <div key={`${d.name}-${i}`} className='col-md-4 col-sm-6 team'>\n                  <div className='thumbnail'>\n                    {' '}\n                    <img src={d.img} alt='...' className='team-img' />\n                    <div className='caption'>\n                      <h4>{d.name}</h4>\n                      <p>{d.job}</p>\n                    </div>\n                    <img src={d.icon} alt='...' className='github-img'/>\n                  </div>\n                </div>\n              </a>\n              ))\n            : 'loading'}\n        </div>\n      </div>\n    </div>\n  )\n}\n","import dbJSON from \"./data/db.json\";\n\nconst minOffset = 10;\nconst maxOffset = 2;\n\nfunction getMisconceptionsByYear(year) {\n  var misconceptions = [];\n  for (const entry in dbJSON) {\n    for (const reference of dbJSON[entry].references) {\n      if (\n        reference.year >= year - minOffset &&\n        reference.year <= year + maxOffset\n      ) {\n        misconceptions.push(dbJSON[entry]);\n        break;\n      }\n    }\n  }\n  return transformMisconceptions(misconceptions);\n  // return misconceptions;\n}\n\nfunction transformMisconceptions(misconceptions) {\n  const groupedMisconceptions = groupMisconceptions(misconceptions);\n  const perfect = misconceptionArrayToJSON(groupedMisconceptions);\n  return perfect;\n}\n\nfunction misconceptionArrayToJSON(misconceptions) {\n    var newMisconceptions = [];\n    for (var i = 0; i < misconceptions.length; i++) {\n        newMisconceptions.push({\n            themeName: misconceptions[i][0][0][0].theme,\n            categories: []\n        });\n        for (var j = 0; j < misconceptions[i].length; j++) {\n            newMisconceptions[i].categories.push({\n                categoryName: misconceptions[i][j][0][0].category,\n                subcategories: []\n            });\n            for (var k = 0; k < misconceptions[i][j].length; k++) {\n                newMisconceptions[i].categories[j].subcategories.push({\n                    subcategoryName: misconceptions[i][j][k][0].subcategory,\n                    misconceptions: misconceptions[i][j][k]\n                });\n            }\n        };\n    }\n    console.log(newMisconceptions);\n    return newMisconceptions;\n}\n\nfunction groupMisconceptions(misconceptions) {\n  // Accepts the array and key\n  const groupBy = (array, f) => {\n    let groups = {};\n    array.forEach(function (o) {\n      var group = JSON.stringify(f(o));\n      groups[group] = groups[group] || [];\n      groups[group].push(o);\n    });\n    return Object.keys(groups).map(function (group) {\n      return groups[group];\n    });\n  };\n  var results = groupBy(misconceptions, function (item) {\n    return [item.theme];\n  });\n  for (var i = 0; i < results.length; i++) {\n    results[i] = groupBy(results[i], function (item) {\n      return [item.category];\n    });\n    for (var j = 0; j < results[i].length; j++) {\n      results[i][j] = groupBy(results[i][j], function (item) {\n        return [item.subcategory];\n      });\n    }\n  }\n  return results;\n}\n  /*\n    [\n        theme1,\n        theme2,\n        theme3 -> JSON: {\n            name: \"Biology\",\n            categories: [\n                category1,º v\n                category2,\n                category3 -> JSON: {\n                    name: \"Mamals\",\n                    subcategories: [\n                        Subcategory1,\n                        Subcategory2,\n                        Subcategory3 -> JSON: {\n                            name: \"Feniles\",\n                            misconceptions: [\n                                misconception1\n                                misconception2,\n                                misconception3 -> JSON: {\n                                    text: \"asldijaslkjdhaslkjdha\",\n                                    references: [\n                                        reference1,\n                                        reference2,\n                                        reference3 -> JSON: {\n                                            text: \"asdasd\",\n                                            year: \"1890\"\n                                        }\n                                    ]\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n    */\nexport default getMisconceptionsByYear;\n","import { useState, useEffect } from \"react\";\nimport { Navigation } from \"./components/navigation\";\nimport { Header } from \"./components/header\";\nimport { About } from \"./components/about\";\nimport { Services } from \"./components/services\";\nimport { Team } from \"./components/Team\";\nimport JsonData from \"./data/data.json\";\nimport SmoothScroll from \"smooth-scroll\";\nimport getMisconceptionsByYear from './utils.js';\nimport \"./App.css\";\n\nexport const scroll = new SmoothScroll('a[href*=\"#\"]', {\n  speed: 1005,\n  speedAsDuration: true,\n});\n\nconst App = () => {\n  const [landingPageData, setLandingPageData] = useState({});\n  useEffect(() => {\n    setLandingPageData(JsonData);\n  }, []);\n\n\n  const [info, setInfo] = useState([]);\n  var callbackFunction = (year) => {\n    var misconceptions = getMisconceptionsByYear(year.value);\n    setInfo(misconceptions);\n  };\n  return (\n    <div>\n      <Navigation />\n      <Header data={landingPageData.Header} parentCallback={callbackFunction}/>\n      {info.map((theme) => {\n         return <Services data={theme} />\n        })}\n      <About data={landingPageData.About} />\n      <Team data={landingPageData.Team} />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}