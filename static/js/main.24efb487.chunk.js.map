{"version":3,"sources":["components/navigation.jsx","components/header.jsx","components/about.jsx","components/services.jsx","components/Team.jsx","utils.js","App.jsx","serviceWorker.js","index.js"],"names":["Navigation","props","id","className","type","data-toggle","data-target","href","src","Header","useState","year","setYear","years","i","push","value","label","data","title","paragraph","style","display","alignItems","onChange","isSearchable","name","options","classNamePrefix","placeholder","padding","onClick","parentCallback","About","alt","Why","map","d","link","text","Why2","Services","themeName","categories","c","categoryName","subcategories","sc","subcategoryName","misconceptions","m","dangerouslySetInnerHTML","__html","html","Team","img","job","icon","getMisconceptionsByYear","entry","dbJSON","references","reference","newMisconceptions","length","theme","j","category","k","subcategory","misconceptionArrayToJSON","groupBy","array","f","groups","forEach","o","group","JSON","stringify","Object","keys","results","item","groupMisconceptions","transformMisconceptions","App","SmoothScroll","speed","speedAsDuration","landingPageData","setLandingPageData","useEffect","JsonData","info","setInfo","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.24efb487.chunk.js","sourcesContent":["export const Navigation = (props) => {\r\n  return (\r\n    <nav id='menu' className='navbar navbar-default navbar-fixed-top'>\r\n      <div className='container'>\r\n        <div className='navbar-header'>\r\n          <button\r\n            type='button'\r\n            className='navbar-toggle collapsed'\r\n            data-toggle='collapse'\r\n            data-target='#bs-example-navbar-collapse-1'\r\n          >\r\n            {' '}\r\n            <span className='sr-only'>Toggle navigation</span>{' '}\r\n            <span className='icon-bar'></span>{' '}\r\n            <span className='icon-bar'></span>{' '}\r\n            <span className='icon-bar'></span>{' '}\r\n          </button>\r\n          <a className='navbar-brand page-scroll' href='#page-top'>\r\n            Misconceptions\r\n          </a>{' '}\r\n          <img src={\"https://cdn-icons-png.flaticon.com/512/3798/3798376.png\"} className=\"logo\"></img>\r\n        </div>\r\n\r\n        <div\r\n          className='collapse navbar-collapse'\r\n          id='bs-example-navbar-collapse-1'\r\n        >\r\n          <ul className='nav navbar-nav navbar-right'>\r\n            <li>\r\n              <a href='#about' className='page-scroll'>\r\n                Why\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href='#team' className='page-scroll'>\r\n                Team\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n","import { useState} from \"react\";\r\nimport Select from \"react-select\";\r\nexport const Header = (props) => {\r\n  const [year, setYear] = useState(null);\r\n\r\n  var years = (() => {\r\n    var min = 1985;\r\n    var max = 2021;\r\n    var years = [];\r\n    for (var i = min; i < max; i++) {\r\n      years.push({\r\n        value: i,\r\n        label: i\r\n      });\r\n    }\r\n    return years;\r\n  })();\r\n\r\n  function handleSetYear(year) {\r\n    // const year = yearSelectRef.current.value;\r\n    setYear(year);\r\n  }\r\n\r\n  function handleSubmitYear() {\r\n    if (year != null) {\r\n      props.parentCallback(year);\r\n    } \r\n  }\r\n  const mystyle = {\r\n    display: \"inline-flex\",\r\n    alignItems: \"baseline\"\r\n  };\r\n\r\n  return (\r\n    <header id=\"header\">\r\n      <div className=\"intro\">\r\n        <div className=\"overlay\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 col-md-offset-2 intro-text\">\r\n                <h1>\r\n                  {props.data ? props.data.title : \"Loading\"}\r\n                  <span></span>\r\n                </h1>\r\n                <p>{props.data ? props.data.paragraph : \"Loading\"}</p>\r\n                <div \r\n                  className=\"yearSelect\" \r\n                  style={mystyle}>\r\n                  <Select onChange={handleSetYear}\r\n                    isSearchable={true}\r\n                    name=\"years\"\r\n                    options={years}\r\n                    className=\"basic-multi-select\"\r\n                    classNamePrefix=\"select\"\r\n                    placeholder=\"Graduation Year\"\r\n                  />\r\n                  <a\r\n                    // href='#features'\r\n                    className=\"btn btn-custom btn-lg page-scroll\"\r\n                    style={{padding: \"10 20\"}}\r\n                    onClick={handleSubmitYear}\r\n                    href='#services'\r\n                  >\r\n                    Get truth\r\n                  </a>{\" \"}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n","export const About = (props) => {\r\n  return (\r\n    <div id=\"about\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            {\" \"}\r\n            <img src=\"https://i.redd.it/b40ya5bkejq71.jpg\" className=\"img-responsive\" alt=\"\" />{\" \"}\r\n          </div>\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <div className=\"about-text\">\r\n              <h2>Why?</h2>\r\n              <p>{props.data ? props.data.paragraph : \"loading...\"}</p>\r\n              <h3>For example:</h3>\r\n              <div className=\"list-style\">\r\n                <div className=\"col-lg-6 col-sm-6 col-xs-12\">\r\n                  <ul>\r\n                    {props.data\r\n                      ? props.data.Why.map((d, i) => (\r\n                        <a href={d.link} key={i}>\r\n                          <li key={`${d.text}-${i}`}>{d.text}</li>\r\n                        </a>\r\n                        ))\r\n                      : \"loading\"}\r\n                  </ul>\r\n                </div>\r\n                <div className=\"col-lg-6 col-sm-6 col-xs-12\">\r\n                  <ul>\r\n                    {props.data\r\n                      ? props.data.Why2.map((d, i) => (\r\n                        <a href={d.link}>\r\n                          <li key={`${d.text}-${i}`}>{d.text}</li>\r\n                        </a>\r\n                        ))\r\n                      : \"loading\"}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/*jshint esversion: 6 */\r\nexport const Services = (props) => {\r\n  return (\r\n    <div id='services' className='text-center'>\r\n      <div className='container theme-container'>\r\n        <div className='section-title'>\r\n          <h1 className=\"section-title\">{props.data.themeName}</h1>\r\n        </div>\r\n        <div className='row'>\r\n          {props.data.categories\r\n            ? props.data.categories.map((c, i) => (\r\n                <div key={`${c.categoryName}-${i}`} className='col'>\r\n                  {' '}\r\n                  <div className='service-desc category-container'>\r\n                    <h3>{c.categoryName}</h3>\r\n                    <div className='row'>\r\n                      {c.subcategories\r\n                        ? c.subcategories.map((sc, i) => (\r\n                            <div key={`${sc.subcategoryName}-${i}`} className='col-md'>\r\n                              {' '}\r\n                              <div className='service-desc'>\r\n                                <h4>{sc.subcategoryName}</h4>\r\n                                \r\n\r\n                                <div className='row'>\r\n                                  {sc.misconceptions\r\n                                    ? sc.misconceptions.map((m, i) => (\r\n                                        <div key={`1000-${i}`} className='col-md'>\r\n                                          {' '}\r\n                                          <div className='service-desc'>\r\n                                            {/* <h3>{m.text}</h3> */}\r\n                                            <div dangerouslySetInnerHTML={{ __html: m.html }} />\r\n                                          </div>\r\n                                        </div>\r\n                                      ))\r\n                                    : 'loading'}\r\n                                </div>\r\n\r\n\r\n                              </div>\r\n                            </div>\r\n                          ))\r\n                        : 'loading'}\r\n                    </div>\r\n\r\n\r\n                  </div>\r\n                </div>\r\n              ))\r\n            : 'loading'}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","export const Team = (props) => {\r\n  return (\r\n    <div id='team' className='text-center'>\r\n      <div className='container'>\r\n        <div className='col-md-8 col-md-offset-2 section-title'>\r\n          <h2>Meet the Team</h2>\r\n          <p>\r\n            \r\n\r\n\r\n          </p>\r\n        </div>\r\n        <div id='row'>\r\n          {props.data\r\n            ? props.data.map((d, i) => (\r\n              <a href={d.link}>\r\n                <div key={`${d.name}-${i}`} className='col-md-4 col-sm-6 team'>\r\n                  <div className='thumbnail'>\r\n                    {' '}\r\n                    <img src={d.img} alt='...' className='team-img' />\r\n                    <div className='caption'>\r\n                      <h4>{d.name}</h4>\r\n                      <p>{d.job}</p>\r\n                    </div>\r\n                    <img src={d.icon} alt='...' className='github-img'/>\r\n                  </div>\r\n                </div>\r\n              </a>\r\n              ))\r\n            : 'loading'}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import dbJSON from \"./data/db.json\";\r\n\r\nconst minOffset = 10;\r\nconst maxOffset = 2;\r\n\r\nfunction getMisconceptionsByYear(year) {\r\n  var misconceptions = [];\r\n  for (const entry in dbJSON) {\r\n    for (const reference of dbJSON[entry].references) {\r\n      if (\r\n        reference.year >= year - minOffset &&\r\n        reference.year <= year + maxOffset\r\n      ) {\r\n        misconceptions.push(dbJSON[entry]);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return transformMisconceptions(misconceptions);\r\n  // return misconceptions;\r\n}\r\n\r\nfunction transformMisconceptions(misconceptions) {\r\n  const groupedMisconceptions = groupMisconceptions(misconceptions);\r\n  const perfect = misconceptionArrayToJSON(groupedMisconceptions);\r\n  return perfect;\r\n}\r\n\r\nfunction misconceptionArrayToJSON(misconceptions) {\r\n    var newMisconceptions = [];\r\n    for (var i = 0; i < misconceptions.length; i++) {\r\n        newMisconceptions.push({\r\n            themeName: misconceptions[i][0][0][0].theme,\r\n            categories: []\r\n        });\r\n        for (var j = 0; j < misconceptions[i].length; j++) {\r\n            newMisconceptions[i].categories.push({\r\n                categoryName: misconceptions[i][j][0][0].category,\r\n                subcategories: []\r\n            });\r\n            for (var k = 0; k < misconceptions[i][j].length; k++) {\r\n                newMisconceptions[i].categories[j].subcategories.push({\r\n                    subcategoryName: misconceptions[i][j][k][0].subcategory,\r\n                    misconceptions: misconceptions[i][j][k]\r\n                });\r\n            }\r\n        };\r\n    }\r\n    return newMisconceptions;\r\n}\r\n\r\nfunction groupMisconceptions(misconceptions) {\r\n  // Accepts the array and key\r\n  const groupBy = (array, f) => {\r\n    let groups = {};\r\n    array.forEach(function (o) {\r\n      var group = JSON.stringify(f(o));\r\n      groups[group] = groups[group] || [];\r\n      groups[group].push(o);\r\n    });\r\n    return Object.keys(groups).map(function (group) {\r\n      return groups[group];\r\n    });\r\n  };\r\n  var results = groupBy(misconceptions, function (item) {\r\n    return [item.theme];\r\n  });\r\n  for (var i = 0; i < results.length; i++) {\r\n    results[i] = groupBy(results[i], function (item) {\r\n      return [item.category];\r\n    });\r\n    for (var j = 0; j < results[i].length; j++) {\r\n      results[i][j] = groupBy(results[i][j], function (item) {\r\n        return [item.subcategory];\r\n      });\r\n    }\r\n  }\r\n  return results;\r\n}\r\n  /*\r\n    [\r\n        theme1,\r\n        theme2,\r\n        theme3 -> JSON: {\r\n            name: \"Biology\",\r\n            categories: [\r\n                category1,º v\r\n                category2,\r\n                category3 -> JSON: {\r\n                    name: \"Mamals\",\r\n                    subcategories: [\r\n                        Subcategory1,\r\n                        Subcategory2,\r\n                        Subcategory3 -> JSON: {\r\n                            name: \"Feniles\",\r\n                            misconceptions: [\r\n                                misconception1\r\n                                misconception2,\r\n                                misconception3 -> JSON: {\r\n                                    text: \"asldijaslkjdhaslkjdha\",\r\n                                    references: [\r\n                                        reference1,\r\n                                        reference2,\r\n                                        reference3 -> JSON: {\r\n                                            text: \"asdasd\",\r\n                                            year: \"1890\"\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            ]\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n    */\r\nexport default getMisconceptionsByYear;\r\n","import { useState, useEffect } from \"react\";\r\nimport { Navigation } from \"./components/navigation\";\r\nimport { Header } from \"./components/header\";\r\nimport { About } from \"./components/about\";\r\nimport { Services } from \"./components/services\";\r\nimport { Team } from \"./components/Team\";\r\nimport JsonData from \"./data/data.json\";\r\nimport SmoothScroll from \"smooth-scroll\";\r\nimport getMisconceptionsByYear from './utils.js';\r\nimport \"./App.css\";\r\n\r\nexport const scroll = new SmoothScroll('a[href*=\"#\"]', {\r\n  speed: 1005,\r\n  speedAsDuration: true,\r\n});\r\n\r\nconst App = () => {\r\n  const [landingPageData, setLandingPageData] = useState({});\r\n  useEffect(() => {\r\n    setLandingPageData(JsonData);\r\n  }, []);\r\n\r\n\r\n  const [info, setInfo] = useState([]);\r\n  var callbackFunction = (year) => {\r\n    var misconceptions = getMisconceptionsByYear(year.value);\r\n    setInfo(misconceptions);\r\n  };\r\n  return (\r\n    <div>\r\n      <Navigation />\r\n      <Header data={landingPageData.Header} parentCallback={callbackFunction}/>\r\n      {info.map((theme) => {\r\n         return <Services data={theme} />\r\n        })}\r\n      <About data={landingPageData.About} />\r\n      <Team data={landingPageData.Team} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}